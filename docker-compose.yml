version: '3'

networks:
  nginx-php74-mysql8-react-genesis:

services:
  # nginx
  nginx-service-genesis:
    image: nginx:stable-alpine
    container_name: nginx-container-genesis
    ports:
      - "8089:80"
    volumes:
      - ./php:/var/www/project
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - php74-service-genesis
      # - mysql8-service-genesis
    networks:
      - nginx-php74-mysql8-react-genesis

  # php
  php74-service-genesis:
    build:
      context: .
      dockerfile: ./php/Dockerfile
    container_name: php74-container-genesis
    ports:
      - "9009:9000"
    volumes:
      - ./php:/var/www/project
    networks:
      - nginx-php74-mysql8-react-genesis

  # mysql
  mysql8-service-genesis:
    image: mysql:8
    container_name: mysql8-container-genesis
    ports:
      - "3309:3306"
    volumes:
      - ./mysql:/var/lib/mysql
    command: --default-authentication-plugin=mysql_native_password --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    restart: always # always restart unless stopped manually
    environment:
      MYSQL_USER: root
      MYSQL_ROOT_PASSWORD: secret
      MYSQL_PASSWORD: secret
    networks:
      - nginx-php74-mysql8-react-genesis

  # react
  react-service-genesis:
    build:
      context: .
      dockerfile: ./react-app/Dockerfile
    container_name: react-container-genesis
    volumes:
      - ./react-app:/var/www/project
      - /app/node_modules
    working_dir: /var/www/project
    ports:
      - 3009:3000
    networks:
      - nginx-php74-mysql8-react-genesis
    stdin_open: true
